"use strict";(self.webpackChunkvision_camera=self.webpackChunkvision_camera||[]).push([[154],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return g}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=c(n),p=a,g=m["".concat(l,".").concat(p)]||m[p]||d[p]||o;return n?r.createElement(g,i(i({ref:t},u),{},{components:n})):r.createElement(g,i({ref:t},u))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},2808:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return p},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return u}});var r=n(3117),a=(n(7294),n(3905)),o=n(4996);const i={id:"mocking",title:"Mocking",sidebar_label:"Mocking"},s=void 0,l={unversionedId:"guides/mocking",id:"guides/mocking",title:"Mocking",description:"The provided library doesn't work on simulators. These steps allow you to mock the library",source:"@site/docs/guides/MOCKING.mdx",sourceDirName:"guides",slug:"/guides/mocking",permalink:"/docs/guides/mocking",draft:!1,editUrl:"https://github.com/mrousavy/react-native-vision-camera/edit/main/docs/docs/guides/MOCKING.mdx",tags:[],version:"current",frontMatter:{id:"mocking",title:"Mocking",sidebar_label:"Mocking"},sidebar:"visionSidebar",previous:{title:"Camera Errors",permalink:"/docs/guides/errors"},next:{title:"Troubleshooting",permalink:"/docs/guides/troubleshooting"}},c={},u=[{value:"Configure the Metro bundler",id:"configure-the-metro-bundler",level:3},{value:"Create proxy for original and mocked modules",id:"create-proxy-for-original-and-mocked-modules",level:3},{value:"Use proxy module",id:"use-proxy-module",level:3},{value:"Trigger",id:"trigger",level:3},{value:"Issues",id:"issues",level:2}],m={toc:u},d="wrapper";function p(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("div",null,(0,a.kt)("img",{align:"right",width:"283",src:(0,o.Z)("img/11_back.png")})),(0,a.kt)("p",null,"The provided library doesn't work on simulators. These steps allow you to mock the library\nand use it for developing or testing. Based on\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/wix/Detox/blob/master/docs/Guide.Mocking.md"},"Detox Mock Guide"),"."),(0,a.kt)("h3",{id:"configure-the-metro-bundler"},"Configure the Metro bundler"),(0,a.kt)("p",null,"In order to override React Native modules, allow bundler to use the flag ",(0,a.kt)("inlineCode",{parentName:"p"},"RN_SRC_EXT")," to extend\n",(0,a.kt)("inlineCode",{parentName:"p"},"resolver.sourceExts"),", and then prioritize any given source extension over the default one."),(0,a.kt)("p",null,"Add to your ",(0,a.kt)("a",{parentName:"p",href:"https://facebook.github.io/metro/docs/configuration/"},"Metro Config"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const { getDefaultConfig } = require(\"metro-config\");\nconst { resolver: defaultResolver } = getDefaultConfig.getDefaultValues();\n\nmodule.exports = {\n  ...\n  resolver: {\n    ...defaultResolver,\n    sourceExts: [\n      process.env.RN_SRC_EXT && process.env.RN_SRC_EXT.split(','),\n      ...defaultResolver.sourceExts,\n    ],\n  },\n};\n\n")),(0,a.kt)("h3",{id:"create-proxy-for-original-and-mocked-modules"},"Create proxy for original and mocked modules"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Create a new folder ",(0,a.kt)("inlineCode",{parentName:"p"},"vision-camera")," anywhere in your project.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Inside that folder, create ",(0,a.kt)("inlineCode",{parentName:"p"},"vision-camera.js")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"vision-camera.e2e.js"),".")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Inside ",(0,a.kt)("inlineCode",{parentName:"p"},"vision-camera.js"),", export the original react native modules you need to mock, and\ninside ",(0,a.kt)("inlineCode",{parentName:"p"},"vision-camera.e2e.js")," export the mocked modules."),(0,a.kt)("p",{parentName:"li"},"In this example, several functions of the modules ",(0,a.kt)("inlineCode",{parentName:"p"},"Camera")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"sortDevices")," are mocked.\nDefine your mocks following the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/mrousavy/react-native-vision-camera/tree/main/src"},"original definitions"),"."),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-js"}," // vision-camera.js\n\n import { Camera, sortDevices } from 'react-native-vision-camera';\n\n export const VisionCamera = Camera;\n export const visionCameraSortDevices = sortDevices;\n")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-js"}," // vision-camera.e2e.js\n\n import React from 'react';\n import RNFS, { writeFile } from 'react-native-fs';\n\n console.log('[DETOX] Using mocked react-native-vision-camera');\n\n export class VisionCamera extends React.PureComponent {\n   static async getAvailableCameraDevices() {\n     return (\n       [\n         {\n           position: 'back',\n         },\n       ]\n     );\n   }\n\n   static async getCameraPermissionStatus() {\n     return 'authorized';\n   }\n\n   static async requestCameraPermission() {\n     return 'authorized';\n   }\n\n   async takePhoto() {\n     const writePath = `${RNFS.DocumentDirectoryPath}/simulated_camera_photo.png`;\n\n     const imageDataBase64 = 'some_large_base_64_encoded_simulated_camera_photo';\n     await writeFile(writePath, imageDataBase64, 'base64');\n\n     return { path: writePath };\n   }\n\n   render() {\n     return null;\n   }\n }\n\n export const visionCameraSortDevices = (_left, _right) => 1;\n")),(0,a.kt)("p",{parentName:"li"},"These mocked modules allows us to get authorized camera permissions, get one back camera\navailable and take a fake photo, while the component doesn't render when instantiated."))),(0,a.kt)("h3",{id:"use-proxy-module"},"Use proxy module"),(0,a.kt)("p",null,"Now that we have exported our native modules and our mocked modules from the same folder,\nwe must reference the proxy module."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"// before\nimport { Camera } from 'react-native-vision-camera';\n\n// now\nimport { VisionCamera } from '/your_path_to_created_folder/vision-camera/vision-camera';\n")),(0,a.kt)("h3",{id:"trigger"},"Trigger"),(0,a.kt)("p",null,"Start Metro bundler with provided flag for using ",(0,a.kt)("inlineCode",{parentName:"p"},".e2e.js")," files.\nWhenever Metro runs with ",(0,a.kt)("inlineCode",{parentName:"p"},"RN_SRC_EXT")," environment variable set, it will override the default files with the ones set in ",(0,a.kt)("inlineCode",{parentName:"p"},"RN_SRC_EXT"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"RN_SRC_EXT=e2e.js react-native start\nRN_SRC_EXT=e2e.js xcodebuild <params>\nRN_SRC_EXT=e2e.js ./gradlew assembleRelease\n")),(0,a.kt)("p",null,"On your simulator, with debug mode enabled, you should see\n",(0,a.kt)("inlineCode",{parentName:"p"},'"[DETOX] Using mocked react-native-vision-camera"')),(0,a.kt)("h2",{id:"issues"},"Issues"),(0,a.kt)("p",null,"If testing doesn't work, try browsing the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/mrousavy/react-native-vision-camera/issues?q=is%3Aissue"},"GitHub issues"),". If your issue doesn't exist, ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/mrousavy/react-native-vision-camera/issues/new/choose"},"create a new one"),". Make sure to fill out the template and include as many details as possible."))}p.isMDXComponent=!0}}]);