"use strict";(self.webpackChunkvision_camera=self.webpackChunkvision_camera||[]).push([[567],{3905:function(e,r,t){t.d(r,{Zo:function(){return c},kt:function(){return f}});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=n.createContext({}),u=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},c=function(e){var r=u(e.components);return n.createElement(l.Provider,{value:r},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=u(t),d=a,f=m["".concat(l,".").concat(d)]||m[d]||p[d]||o;return t?n.createElement(f,i(i({ref:r},c),{},{components:t})):n.createElement(f,i({ref:r},c))}));function f(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=d;var s={};for(var l in r)hasOwnProperty.call(r,l)&&(s[l]=r[l]);s.originalType=e,s[m]="string"==typeof e?e:a,i[1]=s;for(var u=2;u<o;u++)i[u]=t[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5162:function(e,r,t){t.d(r,{Z:function(){return i}});var n=t(7294),a=t(6010),o={tabItem:"tabItem_Ymn6"};function i(e){let{children:r,hidden:t,className:i}=e;return n.createElement("div",{role:"tabpanel",className:(0,a.Z)(o.tabItem,i),hidden:t},r)}},4866:function(e,r,t){t.d(r,{Z:function(){return y}});var n=t(3117),a=t(7294),o=t(6010),i=t(2466),s=t(6550),l=t(1980),u=t(7392),c=t(12);function m(e){return function(e){return a.Children.map(e,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:r,label:t,attributes:n,default:a}}=e;return{value:r,label:t,attributes:n,default:a}}))}function p(e){const{values:r,children:t}=e;return(0,a.useMemo)((()=>{const e=r??m(t);return function(e){const r=(0,u.l)(e,((e,r)=>e.value===r.value));if(r.length>0)throw new Error(`Docusaurus error: Duplicate values "${r.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[r,t])}function d(e){let{value:r,tabValues:t}=e;return t.some((e=>e.value===r))}function f(e){let{queryString:r=!1,groupId:t}=e;const n=(0,s.k6)(),o=function(e){let{queryString:r=!1,groupId:t}=e;if("string"==typeof r)return r;if(!1===r)return null;if(!0===r&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:r,groupId:t});return[(0,l._X)(o),(0,a.useCallback)((e=>{if(!o)return;const r=new URLSearchParams(n.location.search);r.set(o,e),n.replace({...n.location,search:r.toString()})}),[o,n])]}function g(e){const{defaultValue:r,queryString:t=!1,groupId:n}=e,o=p(e),[i,s]=(0,a.useState)((()=>function(e){let{defaultValue:r,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(r){if(!d({value:r,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${r}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return r}const n=t.find((e=>e.default))??t[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:r,tabValues:o}))),[l,u]=f({queryString:t,groupId:n}),[m,g]=function(e){let{groupId:r}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(r),[n,o]=(0,c.Nk)(t);return[n,(0,a.useCallback)((e=>{t&&o.set(e)}),[t,o])]}({groupId:n}),b=(()=>{const e=l??m;return d({value:e,tabValues:o})?e:null})();(0,a.useLayoutEffect)((()=>{b&&s(b)}),[b]);return{selectedValue:i,selectValue:(0,a.useCallback)((e=>{if(!d({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);s(e),u(e),g(e)}),[u,g,o]),tabValues:o}}var b=t(2389),h={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function v(e){let{className:r,block:t,selectedValue:s,selectValue:l,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:m}=(0,i.o5)(),p=e=>{const r=e.currentTarget,t=c.indexOf(r),n=u[t].value;n!==s&&(m(r),l(n))},d=e=>{let r=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;r=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;r=c[t]??c[c.length-1];break}}r?.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":t},r)},u.map((e=>{let{value:r,label:t,attributes:i}=e;return a.createElement("li",(0,n.Z)({role:"tab",tabIndex:s===r?0:-1,"aria-selected":s===r,key:r,ref:e=>c.push(e),onKeyDown:d,onClick:p},i,{className:(0,o.Z)("tabs__item",h.tabItem,i?.className,{"tabs__item--active":s===r})}),t??r)})))}function P(e){let{lazy:r,children:t,selectedValue:n}=e;if(t=Array.isArray(t)?t:[t],r){const e=t.find((e=>e.props.value===n));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},t.map(((e,r)=>(0,a.cloneElement)(e,{key:r,hidden:e.props.value!==n}))))}function k(e){const r=g(e);return a.createElement("div",{className:(0,o.Z)("tabs-container",h.tabList)},a.createElement(v,(0,n.Z)({},e,r)),a.createElement(P,(0,n.Z)({},e,r)))}function y(e){const r=(0,b.Z)();return a.createElement(k,(0,n.Z)({key:String(r)},e))}},8392:function(e,r,t){t.r(r),t.d(r,{assets:function(){return c},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return m}});var n=t(3117),a=(t(7294),t(3905)),o=t(4866),i=t(5162);const s={id:"frame-processors-plugins-ios",title:"Creating Frame Processor Plugins",sidebar_label:"Creating Frame Processor Plugins (iOS)"},l=void 0,u={unversionedId:"guides/frame-processors-plugins-ios",id:"guides/frame-processors-plugins-ios",title:"Creating Frame Processor Plugins",description:"Creating a Frame Processor Plugin for iOS",source:"@site/docs/guides/FRAME_PROCESSOR_CREATE_PLUGIN_IOS.mdx",sourceDirName:"guides",slug:"/guides/frame-processors-plugins-ios",permalink:"/docs/guides/frame-processors-plugins-ios",draft:!1,editUrl:"https://github.com/mrousavy/react-native-vision-camera/edit/main/docs/docs/guides/FRAME_PROCESSOR_CREATE_PLUGIN_IOS.mdx",tags:[],version:"current",frontMatter:{id:"frame-processors-plugins-ios",title:"Creating Frame Processor Plugins",sidebar_label:"Creating Frame Processor Plugins (iOS)"},sidebar:"visionSidebar",previous:{title:"Overview",permalink:"/docs/guides/frame-processors-plugins-overview"},next:{title:"Creating Frame Processor Plugins (Android)",permalink:"/docs/guides/frame-processors-plugins-android"}},c={},m=[{value:"Creating a Frame Processor Plugin for iOS",id:"creating-a-frame-processor-plugin-for-ios",level:2},{value:"Automatic setup",id:"automatic-setup",level:3},{value:"Manual setup",id:"manual-setup",level:3},{value:"\ud83d\ude80 Next section: Finish creating your Frame Processor Plugin (or add Android support to your Frame Processor Plugin)",id:"-next-section-finish-creating-your-frame-processor-plugin-or-add-android-support-to-your-frame-processor-plugin",level:4}],p={toc:m},d="wrapper";function f(e){let{components:r,...t}=e;return(0,a.kt)(d,(0,n.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"creating-a-frame-processor-plugin-for-ios"},"Creating a Frame Processor Plugin for iOS"),(0,a.kt)("p",null,"The Frame Processor Plugin API is built to be as extensible as possible, which allows you to create custom Frame Processor Plugins.\nIn this guide we will create a custom QR Code Scanner Plugin which can be used from JS."),(0,a.kt)("p",null,"iOS Frame Processor Plugins can be written in either ",(0,a.kt)("strong",{parentName:"p"},"Objective-C")," or ",(0,a.kt)("strong",{parentName:"p"},"Swift"),"."),(0,a.kt)("h3",{id:"automatic-setup"},"Automatic setup"),(0,a.kt)("p",null,"Run ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/mateusz1913/vision-camera-plugin-builder"},"Vision Camera Plugin Builder CLI"),", "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"npx vision-camera-plugin-builder ios\n")),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"The CLI will ask you for the path to project's .xcodeproj file, name of the plugin (e.g. ",(0,a.kt)("inlineCode",{parentName:"p"},"QRCodeFrameProcessor"),"), name of the exposed method (e.g. ",(0,a.kt)("inlineCode",{parentName:"p"},"scanQRCodes"),") and language you want to use for plugin development (Objective-C, Objective-C++ or Swift).\nFor reference see the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/mateusz1913/vision-camera-plugin-builder#%EF%B8%8F-options"},"CLI's docs"),".")),(0,a.kt)("h3",{id:"manual-setup"},"Manual setup"),(0,a.kt)(o.Z,{defaultValue:"objc",values:[{label:"Objective-C",value:"objc"},{label:"Swift",value:"swift"}],mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"objc",mdxType:"TabItem"},(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Open your Project in Xcode"),(0,a.kt)("li",{parentName:"ol"},"Create an Objective-C source file, for the QR Code Plugin this will be called ",(0,a.kt)("inlineCode",{parentName:"li"},"QRCodeFrameProcessorPlugin.m"),"."),(0,a.kt)("li",{parentName:"ol"},"Add the following code:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-objc",metastring:"{12}","{12}":!0},"#import <VisionCamera/FrameProcessorPlugin.h>\n#import <VisionCamera/Frame.h>\n\n@interface QRCodeFrameProcessorPlugin : NSObject\n@end\n\n@implementation QRCodeFrameProcessorPlugin\n\nstatic inline id scanQRCodes(Frame* frame, NSArray* args) {\n  CMSampleBufferRef buffer = frame.buffer;\n  UIImageOrientation orientation = frame.orientation;\n  // code goes here\n  return @[];\n}\n\nVISION_EXPORT_FRAME_PROCESSOR(scanQRCodes)\n\n@end\n")),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"The JS function name will be equal to the Objective-C function name you choose (with a ",(0,a.kt)("inlineCode",{parentName:"p"},"__")," prefix). Make sure it is unique across other Frame Processor Plugins.")),(0,a.kt)("ol",{start:4},(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Implement your Frame Processing.")," See the ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/mrousavy/react-native-vision-camera/blob/main/example/ios/Frame%20Processor%20Plugins/Example%20Plugin%20%28Objective%2DC%29"},"Example Plugin (Objective-C)")," for reference."))),(0,a.kt)(i.Z,{value:"swift",mdxType:"TabItem"},(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Open your Project in Xcode"),(0,a.kt)("li",{parentName:"ol"},"Create a Swift file, for the QR Code Plugin this will be ",(0,a.kt)("inlineCode",{parentName:"li"},"QRCodeFrameProcessorPlugin.swift"),". If Xcode asks you to create a Bridging Header, press ",(0,a.kt)("strong",{parentName:"li"},"create"),".")),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://docs-assets.developer.apple.com/published/7ebca7212c/2a065d1a-7e53-4907-a889-b7fa4f2206c9.png",alt:'Xcode "Create Bridging Header" alert'})),(0,a.kt)("ol",{start:3},(0,a.kt)("li",{parentName:"ol"},"Inside the newly created Bridging Header, add the following code:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-objc"},"#import <VisionCamera/FrameProcessorPlugin.h>\n#import <VisionCamera/Frame.h>\n")),(0,a.kt)("ol",{start:4},(0,a.kt)("li",{parentName:"ol"},"Create an Objective-C source file with the same name as the Swift file, for the QR Code Plugin this will be ",(0,a.kt)("inlineCode",{parentName:"li"},"QRCodeFrameProcessorPlugin.m"),". Add the following code:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-objc"},"#import <VisionCamera/FrameProcessorPlugin.h>\n\n@interface VISION_EXPORT_SWIFT_FRAME_PROCESSOR(scanQRCodes, QRCodeFrameProcessorPlugin)\n@end\n")),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"The first parameter in the Macro specifies the JS function name. Make sure it is unique across other Frame Processors.")),(0,a.kt)("ol",{start:5},(0,a.kt)("li",{parentName:"ol"},"In the Swift file, add the following code:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-swift",metastring:"{8}","{8}":!0},"@objc(QRCodeFrameProcessorPlugin)\npublic class QRCodeFrameProcessorPlugin: NSObject, FrameProcessorPluginBase {\n\n  @objc\n  public static func callback(_ frame: Frame!, withArgs _: [Any]!) -> Any! {\n    let buffer = frame.buffer\n    let orientation = frame.orientation\n    // code goes here\n    return []\n  }\n}\n")),(0,a.kt)("ol",{start:6},(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Implement your frame processing.")," See ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/mrousavy/react-native-vision-camera/blob/main/example/ios/Frame%20Processor%20Plugins/Example%20Plugin%20%28Swift%29"},"Example Plugin (Swift)")," for reference.")))),(0,a.kt)("br",null),(0,a.kt)("h4",{id:"-next-section-finish-creating-your-frame-processor-plugin-or-add-android-support-to-your-frame-processor-plugin"},"\ud83d\ude80 Next section: ",(0,a.kt)("a",{parentName:"h4",href:"frame-processors-plugins-final"},"Finish creating your Frame Processor Plugin")," (or ",(0,a.kt)("a",{parentName:"h4",href:"frame-processors-plugins-android"},"add Android support to your Frame Processor Plugin"),")"))}f.isMDXComponent=!0}}]);