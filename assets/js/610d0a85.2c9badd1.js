(self.webpackChunkvision_camera=self.webpackChunkvision_camera||[]).push([[4164],{3905:function(e,t,a){"use strict";a.d(t,{Zo:function(){return u},kt:function(){return d}});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function m(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var c=r.createContext({}),s=function(e){var t=r.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},l=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,u=m(e,["components","mdxType","originalType","parentName"]),l=s(a),d=n,f=l["".concat(c,".").concat(d)]||l[d]||p[d]||o;return a?r.createElement(f,i(i({ref:t},u),{},{components:a})):r.createElement(f,i({ref:t},u))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=l;var m={};for(var c in t)hasOwnProperty.call(t,c)&&(m[c]=t[c]);m.originalType=e,m.mdxType="string"==typeof e?e:n,i[1]=m;for(var s=2;s<o;s++)i[s]=a[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}l.displayName="MDXCreateElement"},4410:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return i},metadata:function(){return m},toc:function(){return c},default:function(){return u}});var r=a(2122),n=a(9756),o=(a(7294),a(3905)),i={id:"hooks_usecameraformat",title:"Module: hooks/useCameraFormat",sidebar_label:"hooks/useCameraFormat",custom_edit_url:null},m={unversionedId:"api/modules/hooks_usecameraformat",id:"api/modules/hooks_usecameraformat",isDocsHomePage:!1,title:"Module: hooks/useCameraFormat",description:"Functions",source:"@site/docs/api/modules/hooks_usecameraformat.md",sourceDirName:"api/modules",slug:"/api/modules/hooks_usecameraformat",permalink:"/react-native-vision-camera/docs/api/modules/hooks_usecameraformat",editUrl:null,version:"current",sidebar_label:"hooks/useCameraFormat",frontMatter:{id:"hooks_usecameraformat",title:"Module: hooks/useCameraFormat",sidebar_label:"hooks/useCameraFormat",custom_edit_url:null},sidebar:"visionSidebar",previous:{title:"Module: hooks/useCameraDevices",permalink:"/react-native-vision-camera/docs/api/modules/hooks_usecameradevices"},next:{title:"Module: hooks/useFrameProcessor",permalink:"/react-native-vision-camera/docs/api/modules/hooks_useframeprocessor"}},c=[{value:"Functions",id:"functions",children:[{value:"useCameraFormat",id:"usecameraformat",children:[]}]}],s={toc:c};function u(e){var t=e.components,a=(0,n.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,r.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"functions"},"Functions"),(0,o.kt)("h3",{id:"usecameraformat"},"useCameraFormat"),(0,o.kt)("p",null,"\u25b8 ",(0,o.kt)("strong",{parentName:"p"},"useCameraFormat"),"(",(0,o.kt)("inlineCode",{parentName:"p"},"device?"),": ",(0,o.kt)("a",{parentName:"p",href:"/react-native-vision-camera/docs/api/interfaces/cameradevice.cameradevice-1"},(0,o.kt)("em",{parentName:"a"},"CameraDevice")),", ",(0,o.kt)("inlineCode",{parentName:"p"},"cameraViewSize?"),": ",(0,o.kt)("a",{parentName:"p",href:"/react-native-vision-camera/docs/api/modules/utils_formatfilter#size"},(0,o.kt)("em",{parentName:"a"},"Size")),"): ",(0,o.kt)("a",{parentName:"p",href:"/react-native-vision-camera/docs/api/interfaces/cameradevice.cameradeviceformat"},(0,o.kt)("em",{parentName:"a"},"CameraDeviceFormat"))," ","|"," ",(0,o.kt)("em",{parentName:"p"},"undefined")),(0,o.kt)("p",null,"Returns the best format for the given camera device."),(0,o.kt)("p",null,"This function tries to choose a format with the highest possible photo-capture resolution and best matching aspect ratio."),(0,o.kt)("h4",{id:"parameters"},"Parameters:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"device?")),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("a",{parentName:"td",href:"/react-native-vision-camera/docs/api/interfaces/cameradevice.cameradevice-1"},(0,o.kt)("em",{parentName:"a"},"CameraDevice"))),(0,o.kt)("td",{parentName:"tr",align:"left"},"The Camera Device")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"cameraViewSize?")),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("a",{parentName:"td",href:"/react-native-vision-camera/docs/api/modules/utils_formatfilter#size"},(0,o.kt)("em",{parentName:"a"},"Size"))),(0,o.kt)("td",{parentName:"tr",align:"left"},"The Camera View's size. This can be an approximation and ",(0,o.kt)("strong",{parentName:"td"},"must be memoized"),"! Default: ",(0,o.kt)("inlineCode",{parentName:"td"},"SCREEN_SIZE"))))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returns:")," ",(0,o.kt)("a",{parentName:"p",href:"/react-native-vision-camera/docs/api/interfaces/cameradevice.cameradeviceformat"},(0,o.kt)("em",{parentName:"a"},"CameraDeviceFormat"))," ","|"," ",(0,o.kt)("em",{parentName:"p"},"undefined")),(0,o.kt)("p",null,"The best matching format for the given camera device, or ",(0,o.kt)("inlineCode",{parentName:"p"},"undefined")," if the camera device is ",(0,o.kt)("inlineCode",{parentName:"p"},"undefined"),"."),(0,o.kt)("p",null,"Defined in: ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/cuvent/react-native-vision-camera/blob/3bf4197/src/hooks/useCameraFormat.ts#L16"},"hooks/useCameraFormat.ts:16")))}u.isMDXComponent=!0}}]);