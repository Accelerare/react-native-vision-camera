(self.webpackChunkvision_camera=self.webpackChunkvision_camera||[]).push([[1909],{3905:function(e,r,a){"use strict";a.d(r,{Zo:function(){return m},kt:function(){return d}});var n=a(7294);function t(e,r,a){return r in e?Object.defineProperty(e,r,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[r]=a,e}function o(e,r){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var r=1;r<arguments.length;r++){var a=null!=arguments[r]?arguments[r]:{};r%2?o(Object(a),!0).forEach((function(r){t(e,r,a[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(a,r))}))}return e}function s(e,r){if(null==e)return{};var a,n,t=function(e,r){if(null==e)return{};var a,n,t={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],r.indexOf(a)>=0||(t[a]=e[a]);return t}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],r.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(t[a]=e[a])}return t}var c=n.createContext({}),l=function(e){var r=n.useContext(c),a=r;return e&&(a="function"==typeof e?e(r):i(i({},r),e)),a},m=function(e){var r=l(e.components);return n.createElement(c.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},p=n.forwardRef((function(e,r){var a=e.components,t=e.mdxType,o=e.originalType,c=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),p=l(a),d=t,g=p["".concat(c,".").concat(d)]||p[d]||u[d]||o;return a?n.createElement(g,i(i({ref:r},m),{},{components:a})):n.createElement(g,i({ref:r},m))}));function d(e,r){var a=arguments,t=r&&r.mdxType;if("string"==typeof e||t){var o=a.length,i=new Array(o);i[0]=p;var s={};for(var c in r)hasOwnProperty.call(r,c)&&(s[c]=r[c]);s.originalType=e,s.mdxType="string"==typeof e?e:t,i[1]=s;for(var l=2;l<o;l++)i[l]=a[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"},8215:function(e,r,a){"use strict";var n=a(7294);r.Z=function(e){var r=e.children,a=e.hidden,t=e.className;return n.createElement("div",{role:"tabpanel",hidden:a,className:t},r)}},5064:function(e,r,a){"use strict";a.d(r,{Z:function(){return u}});var n=a(7294),t=a(9443);var o=function(){var e=(0,n.useContext)(t.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},i=a(6010),s="tabItem_1uMI",c="tabItemActive_2DSg";var l=37,m=39;var u=function(e){var r=e.lazy,a=e.block,t=e.defaultValue,u=e.values,p=e.groupId,d=e.className,g=o(),f=g.tabGroupChoices,v=g.setTabGroupChoices,P=(0,n.useState)(t),k=P[0],h=P[1],b=n.Children.toArray(e.children),N=[];if(null!=p){var y=f[p];null!=y&&y!==k&&u.some((function(e){return e.value===y}))&&h(y)}var C=function(e){var r=e.currentTarget,a=N.indexOf(r),n=u[a].value;h(n),null!=p&&(v(p,n),setTimeout((function(){var e,a,n,t,o,i,s,l;(e=r.getBoundingClientRect(),a=e.top,n=e.left,t=e.bottom,o=e.right,i=window,s=i.innerHeight,l=i.innerWidth,a>=0&&o<=l&&t<=s&&n>=0)||(r.scrollIntoView({block:"center",behavior:"smooth"}),r.classList.add(c),setTimeout((function(){return r.classList.remove(c)}),2e3))}),150))},w=function(e){var r,a;switch(e.keyCode){case m:var n=N.indexOf(e.target)+1;a=N[n]||N[0];break;case l:var t=N.indexOf(e.target)-1;a=N[t]||N[N.length-1]}null==(r=a)||r.focus()};return n.createElement("div",{className:"tabs-container"},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":a},d)},u.map((function(e){var r=e.value,a=e.label;return n.createElement("li",{role:"tab",tabIndex:k===r?0:-1,"aria-selected":k===r,className:(0,i.Z)("tabs__item",s,{"tabs__item--active":k===r}),key:r,ref:function(e){return N.push(e)},onKeyDown:w,onFocus:C,onClick:C},a)}))),r?(0,n.cloneElement)(b.filter((function(e){return e.props.value===k}))[0],{className:"margin-vert--md"}):n.createElement("div",{className:"margin-vert--md"},b.map((function(e,r){return(0,n.cloneElement)(e,{key:r,hidden:e.props.value!==k})}))))}},9443:function(e,r,a){"use strict";var n=(0,a(7294).createContext)(void 0);r.Z=n},323:function(e,r,a){"use strict";a.r(r),a.d(r,{frontMatter:function(){return l},contentTitle:function(){return m},metadata:function(){return u},toc:function(){return p},default:function(){return g}});var n=a(2122),t=a(9756),o=(a(7294),a(3905)),i=a(5064),s=a(8215),c=["components"],l={id:"frame-processors-plugins-android",title:"Creating Frame Processor Plugins for Android",sidebar_label:"Creating Frame Processor Plugins (Android)"},m=void 0,u={unversionedId:"guides/frame-processors-plugins-android",id:"guides/frame-processors-plugins-android",isDocsHomePage:!1,title:"Creating Frame Processor Plugins for Android",description:"Creating a Frame Processor",source:"@site/docs/guides/FRAME_PROCESSOR_CREATE_PLUGIN_ANDROID.mdx",sourceDirName:"guides",slug:"/guides/frame-processors-plugins-android",permalink:"/react-native-vision-camera/docs/guides/frame-processors-plugins-android",editUrl:"https://github.com/mrousavy/react-native-vision-camera/edit/main/docs/docs/guides/FRAME_PROCESSOR_CREATE_PLUGIN_ANDROID.mdx",version:"current",frontMatter:{id:"frame-processors-plugins-android",title:"Creating Frame Processor Plugins for Android",sidebar_label:"Creating Frame Processor Plugins (Android)"},sidebar:"visionSidebar",previous:{title:"Creating Frame Processor Plugins (iOS)",permalink:"/react-native-vision-camera/docs/guides/frame-processors-plugins-ios"},next:{title:"Finish creating your Frame Processor Plugin",permalink:"/react-native-vision-camera/docs/guides/frame-processors-plugins-final"}},p=[{value:"Creating a Frame Processor",id:"creating-a-frame-processor",children:[]}],d={toc:p};function g(e){var r=e.components,a=(0,t.Z)(e,c);return(0,o.kt)("wrapper",(0,n.Z)({},d,a,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"creating-a-frame-processor"},"Creating a Frame Processor"),(0,o.kt)("p",null,"The Frame Processor Plugin API is built to be as extensible as possible, which allows you to create custom Frame Processor Plugins.\nIn this guide we will create a custom QR Code Scanner Plugin which can be used from JS."),(0,o.kt)("p",null,"Android Frame Processor Plugins can be written in either ",(0,o.kt)("strong",{parentName:"p"},"Java"),", ",(0,o.kt)("strong",{parentName:"p"},"Kotlin")," or ",(0,o.kt)("strong",{parentName:"p"},"C++ (JNI)"),"."),(0,o.kt)(i.Z,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"Kotlin",value:"kotlin"}],mdxType:"Tabs"},(0,o.kt)(s.Z,{value:"java",mdxType:"TabItem"},(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Open your Project in Android Studio"),(0,o.kt)("li",{parentName:"ol"},"Create a Java source file, for the QR Code Plugin this will be called ",(0,o.kt)("inlineCode",{parentName:"li"},"QRCodeFrameProcessorPlugin.java"),"."),(0,o.kt)("li",{parentName:"ol"},"Add the following code:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java",metastring:"{8}","{8}":!0},'import androidx.camera.core.ImageProxy;\nimport com.mrousavy.camera.frameprocessor.FrameProcessorPlugin;\n\npublic class QRCodeFrameProcessorPlugin extends FrameProcessorPlugin {\n\n  @Override\n  public Object callback(ImageProxy image, Object[] params) {\n    // code goes here\n    return null;\n  }\n\n  QRCodeFrameProcessorPlugin() {\n    super("scanQRCodes");\n  }\n}\n')),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"The JS function name will be equal to the name you pass to the ",(0,o.kt)("inlineCode",{parentName:"p"},"super(...)")," call (with a ",(0,o.kt)("inlineCode",{parentName:"p"},"__")," prefix). Make sure it is unique across other Frame Processor Plugins."))),(0,o.kt)("ol",{start:4},(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Implement your Frame Processing.")," See the ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/mrousavy/react-native-vision-camera/blob/main/example/android/app/src/main/java/com/mrousavy/camera/example/ExampleFrameProcessorPlugin.java"},"Example Plugin (Java)")," for reference."),(0,o.kt)("li",{parentName:"ol"},"Create a new Java file which registers the Frame Processor Plugin in a React Package, for the QR Code Scanner plugin this file will be called ",(0,o.kt)("inlineCode",{parentName:"li"},"QRCodeFrameProcessorPluginPackage.java"),":")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java",metastring:"{12}","{12}":!0},"import com.facebook.react.ReactPackage;\nimport com.facebook.react.bridge.NativeModule;\nimport com.facebook.react.bridge.ReactApplicationContext;\nimport com.facebook.react.uimanager.ViewManager;\nimport com.mrousavy.camera.frameprocessor.FrameProcessorPlugin;\nimport javax.annotation.Nonnull;\n\npublic class QRCodeFrameProcessorPluginPackage implements ReactPackage {\n  @NonNull\n  @Override\n  public List<NativeModule> createNativeModules(@NonNull ReactApplicationContext reactContext) {\n    FrameProcessorPlugin.register(new QRCodeFrameProcessorPlugin());\n    return Collections.emptyList();\n  }\n\n  @Nonnull\n  @Override\n  public List<ViewManager> createViewManagers(@Nonnull ReactApplicationContext reactContext) {\n    return Collections.emptyList();\n  }\n}\n"))),(0,o.kt)(s.Z,{value:"kotlin",mdxType:"TabItem"},(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Open your Project in Android Studio"),(0,o.kt)("li",{parentName:"ol"},"Create a Kotlin source file, for the QR Code Plugin this will be called ",(0,o.kt)("inlineCode",{parentName:"li"},"QRCodeFrameProcessorPlugin.kt"),"."),(0,o.kt)("li",{parentName:"ol"},"Add the following code:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:"{7}","{7}":!0},'import androidx.camera.core.ImageProxy\nimport com.mrousavy.camera.frameprocessor.FrameProcessorPlugin\n\nclass ExampleFrameProcessorPluginKotlin: FrameProcessorPlugin("scanQRCodes") {\n\n  override fun callback(image: ImageProxy, params: Array<Any>): Any? {\n    // code goes here\n    return null\n  }\n}\n')),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"The JS function name will be equal to the name you pass to the ",(0,o.kt)("inlineCode",{parentName:"p"},"FrameProcessorPlugin(...)")," call (with a ",(0,o.kt)("inlineCode",{parentName:"p"},"__")," prefix). Make sure it is unique across other Frame Processor Plugins."))),(0,o.kt)("ol",{start:4},(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Implement your Frame Processing.")," See the ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/mrousavy/react-native-vision-camera/blob/main/example/android/app/src/main/java/com/mrousavy/camera/example/ExampleFrameProcessorPlugin.java"},"Example Plugin (Java)")," for reference."),(0,o.kt)("li",{parentName:"ol"},"Create a new Kotlin file which registers the Frame Processor Plugin in a React Package, for the QR Code Scanner plugin this file will be called ",(0,o.kt)("inlineCode",{parentName:"li"},"QRCodeFrameProcessorPluginPackage.kt"),":")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:"{9}","{9}":!0},"import com.facebook.react.ReactPackage\nimport com.facebook.react.bridge.NativeModule\nimport com.facebook.react.bridge.ReactApplicationContext\nimport com.facebook.react.uimanager.ViewManager\nimport com.mrousavy.camera.frameprocessor.FrameProcessorPlugin\n\nclass QRCodeFrameProcessorPluginPackage : ReactPackage {\n  override fun createNativeModules(reactContext: ReactApplicationContext): List<NativeModule> {\n    FrameProcessorPlugin.register(ExampleFrameProcessorPluginKotlin())\n    return emptyList()\n  }\n\n  override fun createViewManagers(reactContext: ReactApplicationContext): List<ViewManager<*, *>> {\n    return emptyList()\n  }\n}\n")))),(0,o.kt)("br",null),(0,o.kt)("h4",{id:"-next-section-finish-creating-your-frame-processor-plugin-or-add-ios-support-to-your-frame-processor-plugin"},"\ud83d\ude80 Next section: ",(0,o.kt)("a",{parentName:"h4",href:"frame-processors-plugins-final"},"Finish creating your Frame Processor Plugin")," (or ",(0,o.kt)("a",{parentName:"h4",href:"frame-processors-plugins-ios"},"add iOS support to your Frame Processor Plugin"),")"))}g.isMDXComponent=!0},6010:function(e,r,a){"use strict";function n(e){var r,a,t="";if("string"==typeof e||"number"==typeof e)t+=e;else if("object"==typeof e)if(Array.isArray(e))for(r=0;r<e.length;r++)e[r]&&(a=n(e[r]))&&(t&&(t+=" "),t+=a);else for(r in e)e[r]&&(t&&(t+=" "),t+=r);return t}function t(){for(var e,r,a=0,t="";a<arguments.length;)(e=arguments[a++])&&(r=n(e))&&(t&&(t+=" "),t+=r);return t}a.d(r,{Z:function(){return t}})}}]);