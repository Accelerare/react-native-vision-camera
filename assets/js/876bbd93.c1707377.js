(self.webpackChunkvision_camera=self.webpackChunkvision_camera||[]).push([[9846],{3905:function(e,t,a){"use strict";a.d(t,{Zo:function(){return m},kt:function(){return d}});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),s=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},m=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),u=s(a),d=n,k=u["".concat(l,".").concat(d)]||u[d]||c[d]||i;return a?r.createElement(k,o(o({ref:t},m),{},{components:a})):r.createElement(k,o({ref:t},m))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=u;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:n,o[1]=p;for(var s=2;s<i;s++)o[s]=a[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},1953:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return o},metadata:function(){return p},toc:function(){return l},default:function(){return m}});var r=a(2122),n=a(9756),i=(a(7294),a(3905)),o={id:"cameraprops.cameraprops-1",title:"Interface: CameraProps",sidebar_label:"CameraProps",custom_edit_url:null},p={unversionedId:"api/interfaces/cameraprops.cameraprops-1",id:"api/interfaces/cameraprops.cameraprops-1",isDocsHomePage:!1,title:"Interface: CameraProps",description:"CameraProps.CameraProps",source:"@site/docs/api/interfaces/cameraprops.cameraprops-1.md",sourceDirName:"api/interfaces",slug:"/api/interfaces/cameraprops.cameraprops-1",permalink:"/react-native-vision-camera/docs/api/interfaces/cameraprops.cameraprops-1",editUrl:null,version:"current",sidebar_label:"CameraProps",frontMatter:{id:"cameraprops.cameraprops-1",title:"Interface: CameraProps",sidebar_label:"CameraProps",custom_edit_url:null},sidebar:"visionSidebar",previous:{title:"Interface: ErrorWithCause",permalink:"/react-native-vision-camera/docs/api/interfaces/cameraerror.errorwithcause"},next:{title:"Interface: Frame",permalink:"/react-native-vision-camera/docs/api/interfaces/frame.frame-1"}},l=[{value:"Hierarchy",id:"hierarchy",children:[]},{value:"Properties",id:"properties",children:[{value:"colorSpace",id:"colorspace",children:[]},{value:"device",id:"device",children:[]},{value:"enableDepthData",id:"enabledepthdata",children:[]},{value:"enableHighResolutionCapture",id:"enablehighresolutioncapture",children:[]},{value:"enablePortraitEffectsMatteDelivery",id:"enableportraiteffectsmattedelivery",children:[]},{value:"enableZoomGesture",id:"enablezoomgesture",children:[]},{value:"format",id:"format",children:[]},{value:"fps",id:"fps",children:[]},{value:"frameProcessor",id:"frameprocessor",children:[]},{value:"frameProcessorFps",id:"frameprocessorfps",children:[]},{value:"hdr",id:"hdr",children:[]},{value:"isActive",id:"isactive",children:[]},{value:"lowLightBoost",id:"lowlightboost",children:[]},{value:"onError",id:"onerror",children:[]},{value:"onInitialized",id:"oninitialized",children:[]},{value:"preset",id:"preset",children:[]},{value:"torch",id:"torch",children:[]},{value:"zoom",id:"zoom",children:[]}]}],s={toc:l};function m(e){var t=e.components,a=(0,n.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,r.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/react-native-vision-camera/docs/api/modules/cameraprops"},"CameraProps"),".CameraProps"),(0,i.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("em",{parentName:"p"},"ViewProps")),(0,i.kt)("p",{parentName:"li"},"\u21b3 ",(0,i.kt)("strong",{parentName:"p"},"CameraProps")))),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("h3",{id:"colorspace"},"colorSpace"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"colorSpace"),": ",(0,i.kt)("a",{parentName:"p",href:"/react-native-vision-camera/docs/api/modules/cameradevice#colorspace"},(0,i.kt)("em",{parentName:"a"},"ColorSpace"))),(0,i.kt)("p",null,"Specifies the color space to use for this camera device. Make sure the given ",(0,i.kt)("inlineCode",{parentName:"p"},"format")," contains the given ",(0,i.kt)("inlineCode",{parentName:"p"},"colorSpace"),"."),(0,i.kt)("p",null,"Requires ",(0,i.kt)("inlineCode",{parentName:"p"},"format")," to be set."),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/cuvent/react-native-vision-camera/blob/49ae984/src/CameraProps.ts#L96"},"CameraProps.ts:96")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"device"},"device"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"device"),": ",(0,i.kt)("a",{parentName:"p",href:"/react-native-vision-camera/docs/api/interfaces/cameradevice.cameradevice-1"},(0,i.kt)("em",{parentName:"a"},"CameraDevice"))),(0,i.kt)("p",null,"The Camera Device to use."),(0,i.kt)("p",null,"See the ",(0,i.kt)("a",{parentName:"p",href:"https://cuvent.github.io/react-native-vision-camera/docs/guides/devices"},"Camera Devices")," section in the documentation for more information about Camera Devices."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))," "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"const devices = useCameraDevices('wide-angle-camera')\nconst device = devices.back\n\nreturn (\n  <Camera\n    device={device}\n    isActive={true}\n    style={StyleSheet.absoluteFill}\n  />\n)\n")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/cuvent/react-native-vision-camera/blob/49ae984/src/CameraProps.ts#L27"},"CameraProps.ts:27")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"enabledepthdata"},"enableDepthData"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"enableDepthData"),": ",(0,i.kt)("em",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Also captures data from depth-perception sensors. (e.g. disparity maps)"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"default"))," false"),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/cuvent/react-native-vision-camera/blob/49ae984/src/CameraProps.ts#L104"},"CameraProps.ts:104")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"enablehighresolutioncapture"},"enableHighResolutionCapture"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"enableHighResolutionCapture"),": ",(0,i.kt)("em",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Indicates whether the photo render pipeline should be configured to deliver high resolution still images"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"default"))," false"),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/cuvent/react-native-vision-camera/blob/49ae984/src/CameraProps.ts#L119"},"CameraProps.ts:119")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"enableportraiteffectsmattedelivery"},"enablePortraitEffectsMatteDelivery"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"enablePortraitEffectsMatteDelivery"),": ",(0,i.kt)("em",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"A boolean specifying whether the photo render pipeline is prepared for portrait effects matte delivery."),(0,i.kt)("p",null,"When enabling this, you must also set ",(0,i.kt)("inlineCode",{parentName:"p"},"enableDepthData")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"platform"))," iOS 12.0+"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"default"))," false"),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/cuvent/react-native-vision-camera/blob/49ae984/src/CameraProps.ts#L113"},"CameraProps.ts:113")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"enablezoomgesture"},"enableZoomGesture"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"enableZoomGesture"),": ",(0,i.kt)("em",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Enables or disables the native pinch to zoom gesture."),(0,i.kt)("p",null,"If you want to implement a custom zoom gesture, see ",(0,i.kt)("a",{parentName:"p",href:"https://cuvent.github.io/react-native-vision-camera/docs/guides/animated"},"the Zooming with Reanimated documentation"),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"default"))," false"),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/cuvent/react-native-vision-camera/blob/49ae984/src/CameraProps.ts#L61"},"CameraProps.ts:61")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"format"},"format"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"format"),": ",(0,i.kt)("a",{parentName:"p",href:"/react-native-vision-camera/docs/api/interfaces/cameradevice.cameradeviceformat"},(0,i.kt)("em",{parentName:"a"},"CameraDeviceFormat"))),(0,i.kt)("p",null,"Selects a given format. Must be ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," when ",(0,i.kt)("inlineCode",{parentName:"p"},"preset")," is set!"),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/cuvent/react-native-vision-camera/blob/49ae984/src/CameraProps.ts#L72"},"CameraProps.ts:72")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"fps"},"fps"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"fps"),": ",(0,i.kt)("em",{parentName:"p"},"number")),(0,i.kt)("p",null,"Specify the frames per second this camera should use. Make sure the given ",(0,i.kt)("inlineCode",{parentName:"p"},"format")," includes a frame rate range with the given ",(0,i.kt)("inlineCode",{parentName:"p"},"fps"),"."),(0,i.kt)("p",null,"Requires ",(0,i.kt)("inlineCode",{parentName:"p"},"format")," to be set."),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/cuvent/react-native-vision-camera/blob/49ae984/src/CameraProps.ts#L78"},"CameraProps.ts:78")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"frameprocessor"},"frameProcessor"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"frameProcessor"),": (",(0,i.kt)("inlineCode",{parentName:"p"},"frame"),": ",(0,i.kt)("a",{parentName:"p",href:"/react-native-vision-camera/docs/api/interfaces/frame.frame-1"},(0,i.kt)("em",{parentName:"a"},"Frame")),") => ",(0,i.kt)("em",{parentName:"p"},"void")),(0,i.kt)("p",null,'A worklet which will be called for every frame the Camera "sees". Throttle the Frame Processor\'s frame rate with ',(0,i.kt)("a",{parentName:"p",href:"/react-native-vision-camera/docs/api/interfaces/cameraprops.cameraprops-1#frameprocessorfps"},(0,i.kt)("inlineCode",{parentName:"a"},"frameProcessorFps")),"."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"See ",(0,i.kt)("a",{parentName:"p",href:"https://cuvent.github.io/react-native-vision-camera/docs/guides/frame-processors"},"the Frame Processors documentation")," for more information")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))," "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"const frameProcessor = useFrameProcessor((frame) => {\n  'worklet'\n  const qrCodes = scanQRCodes(frame)\n  console.log(`Detected QR Codes: ${qrCodes}`)\n}, [])\n\nreturn <Camera {...cameraProps} frameProcessor={frameProcessor} />\n")),(0,i.kt)("h4",{id:"type-declaration"},"Type declaration:"),(0,i.kt)("p",null,"\u25b8 (",(0,i.kt)("inlineCode",{parentName:"p"},"frame"),": ",(0,i.kt)("a",{parentName:"p",href:"/react-native-vision-camera/docs/api/interfaces/frame.frame-1"},(0,i.kt)("em",{parentName:"a"},"Frame")),"): ",(0,i.kt)("em",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"parameters"},"Parameters:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"frame")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/react-native-vision-camera/docs/api/interfaces/frame.frame-1"},(0,i.kt)("em",{parentName:"a"},"Frame")))))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns:")," ",(0,i.kt)("em",{parentName:"p"},"void")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/cuvent/react-native-vision-camera/blob/49ae984/src/CameraProps.ts#L146"},"CameraProps.ts:146")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/cuvent/react-native-vision-camera/blob/49ae984/src/CameraProps.ts#L146"},"CameraProps.ts:146")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"frameprocessorfps"},"frameProcessorFps"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"frameProcessorFps"),": ",(0,i.kt)("em",{parentName:"p"},"number")),(0,i.kt)("p",null,"Specifies the maximum frame rate the frame processor can use, independent of the Camera's frame rate (",(0,i.kt)("inlineCode",{parentName:"p"},"fps")," property)."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"A value of ",(0,i.kt)("inlineCode",{parentName:"li"},"1")," (default) indicates that the frame processor gets executed once per second, perfect for code scanning."),(0,i.kt)("li",{parentName:"ul"},"A value of ",(0,i.kt)("inlineCode",{parentName:"li"},"10")," indicates that the frame processor gets executed 10 times per second, perfect for more realtime use-cases."),(0,i.kt)("li",{parentName:"ul"},"A value of ",(0,i.kt)("inlineCode",{parentName:"li"},"25")," indicates that the frame processor gets executed 30 times per second, perfect for high-speed realtime use-cases.")),(0,i.kt)("p",null,"If you're using higher values, always check your Xcode/Android Studio Logs to make sure your frame processors are executing fast enough\nwithout blocking the video recording queue."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"default"))," 1"),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/cuvent/react-native-vision-camera/blob/49ae984/src/CameraProps.ts#L159"},"CameraProps.ts:159")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"hdr"},"hdr"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"hdr"),": ",(0,i.kt)("em",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Enables or disables HDR on this camera device. Make sure the given ",(0,i.kt)("inlineCode",{parentName:"p"},"format")," supports HDR mode."),(0,i.kt)("p",null,"Requires ",(0,i.kt)("inlineCode",{parentName:"p"},"format")," to be set."),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/cuvent/react-native-vision-camera/blob/49ae984/src/CameraProps.ts#L84"},"CameraProps.ts:84")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"isactive"},"isActive"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"isActive"),": ",(0,i.kt)("em",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Whether the Camera should actively stream video frames, or not. See the ",(0,i.kt)("a",{parentName:"p",href:"https://cuvent.github.io/react-native-vision-camera/docs/guides/devices#the-isactive-prop"},"documentation about the ",(0,i.kt)("inlineCode",{parentName:"a"},"isActive")," prop")," for more information."),(0,i.kt)("p",null,"This can be compared to a Video component, where ",(0,i.kt)("inlineCode",{parentName:"p"},"isActive")," specifies whether the video is paused or not."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Note: If you fully unmount the ",(0,i.kt)("inlineCode",{parentName:"p"},"<Camera>")," component instead of using ",(0,i.kt)("inlineCode",{parentName:"p"},"isActive={false}"),", the Camera will take a bit longer to start again. In return, it will use less resources since the Camera will be completely destroyed when unmounted.")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/cuvent/react-native-vision-camera/blob/49ae984/src/CameraProps.ts#L35"},"CameraProps.ts:35")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"lowlightboost"},"lowLightBoost"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"lowLightBoost"),": ",(0,i.kt)("em",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Enables or disables low-light boost on this camera device. Make sure the given ",(0,i.kt)("inlineCode",{parentName:"p"},"format")," supports low-light boost."),(0,i.kt)("p",null,"Requires ",(0,i.kt)("inlineCode",{parentName:"p"},"format")," to be set."),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/cuvent/react-native-vision-camera/blob/49ae984/src/CameraProps.ts#L90"},"CameraProps.ts:90")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"onerror"},"onError"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"onError"),": (",(0,i.kt)("inlineCode",{parentName:"p"},"error"),": ",(0,i.kt)("a",{parentName:"p",href:"/react-native-vision-camera/docs/api/classes/cameraerror.cameraruntimeerror"},(0,i.kt)("em",{parentName:"a"},"CameraRuntimeError")),") => ",(0,i.kt)("em",{parentName:"p"},"void")),(0,i.kt)("p",null,"Called when any kind of runtime error occured."),(0,i.kt)("h4",{id:"type-declaration-1"},"Type declaration:"),(0,i.kt)("p",null,"\u25b8 (",(0,i.kt)("inlineCode",{parentName:"p"},"error"),": ",(0,i.kt)("a",{parentName:"p",href:"/react-native-vision-camera/docs/api/classes/cameraerror.cameraruntimeerror"},(0,i.kt)("em",{parentName:"a"},"CameraRuntimeError")),"): ",(0,i.kt)("em",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"parameters-1"},"Parameters:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"error")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/react-native-vision-camera/docs/api/classes/cameraerror.cameraruntimeerror"},(0,i.kt)("em",{parentName:"a"},"CameraRuntimeError")))))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns:")," ",(0,i.kt)("em",{parentName:"p"},"void")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/cuvent/react-native-vision-camera/blob/49ae984/src/CameraProps.ts#L125"},"CameraProps.ts:125")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/cuvent/react-native-vision-camera/blob/49ae984/src/CameraProps.ts#L125"},"CameraProps.ts:125")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"oninitialized"},"onInitialized"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"onInitialized"),": () => ",(0,i.kt)("em",{parentName:"p"},"void")),(0,i.kt)("p",null,"Called when the camera was successfully initialized."),(0,i.kt)("h4",{id:"type-declaration-2"},"Type declaration:"),(0,i.kt)("p",null,"\u25b8 (): ",(0,i.kt)("em",{parentName:"p"},"void")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns:")," ",(0,i.kt)("em",{parentName:"p"},"void")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/cuvent/react-native-vision-camera/blob/49ae984/src/CameraProps.ts#L129"},"CameraProps.ts:129")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/cuvent/react-native-vision-camera/blob/49ae984/src/CameraProps.ts#L129"},"CameraProps.ts:129")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"preset"},"preset"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"preset"),": ",(0,i.kt)("a",{parentName:"p",href:"/react-native-vision-camera/docs/api/modules/camerapreset#camerapreset"},(0,i.kt)("em",{parentName:"a"},"CameraPreset"))),(0,i.kt)("p",null,"Automatically selects a camera format which best matches the given preset. Must be ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," when ",(0,i.kt)("inlineCode",{parentName:"p"},"format")," is set!"),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/cuvent/react-native-vision-camera/blob/49ae984/src/CameraProps.ts#L68"},"CameraProps.ts:68")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"torch"},"torch"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"torch"),": ",(0,i.kt)("inlineCode",{parentName:"p"},'"off"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"on"')),(0,i.kt)("p",null,"Set the current torch mode."),(0,i.kt)("p",null,"Note: The torch is only available on ",(0,i.kt)("inlineCode",{parentName:"p"},'"back"')," cameras, and isn't supported by every phone."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"default")),' "off"'),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/cuvent/react-native-vision-camera/blob/49ae984/src/CameraProps.ts#L45"},"CameraProps.ts:45")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"zoom"},"zoom"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"zoom"),": ",(0,i.kt)("em",{parentName:"p"},"number")),(0,i.kt)("p",null,"Specifies the zoom factor of the current camera, in percent. (",(0,i.kt)("inlineCode",{parentName:"p"},"0.0")," - ",(0,i.kt)("inlineCode",{parentName:"p"},"1.0"),")"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Note:")," Linearly increasing this value always appears logarithmic to the user."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"default"))," 0.0"),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/cuvent/react-native-vision-camera/blob/49ae984/src/CameraProps.ts#L53"},"CameraProps.ts:53")))}m.isMDXComponent=!0}}]);