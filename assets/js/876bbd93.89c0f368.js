(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{123:function(e,t,a){"use strict";a.d(t,"a",(function(){return s})),a.d(t,"b",(function(){return O}));var r=a(0),n=a.n(r);function c(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function b(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?b(Object(a),!0).forEach((function(t){c(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):b(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},c=Object.keys(e);for(r=0;r<c.length;r++)a=c[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)a=c[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=n.a.createContext({}),l=function(e){var t=n.a.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},s=function(e){var t=l(e.components);return n.a.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},u=n.a.forwardRef((function(e,t){var a=e.components,r=e.mdxType,c=e.originalType,b=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),s=l(a),u=r,O=s["".concat(b,".").concat(u)]||s[u]||m[u]||c;return a?n.a.createElement(O,i(i({ref:t},p),{},{components:a})):n.a.createElement(O,i({ref:t},p))}));function O(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=a.length,b=new Array(c);b[0]=u;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:r,b[1]=i;for(var p=2;p<c;p++)b[p]=a[p];return n.a.createElement.apply(null,b)}return n.a.createElement.apply(null,a)}u.displayName="MDXCreateElement"},99:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return b})),a.d(t,"metadata",(function(){return i})),a.d(t,"toc",(function(){return o})),a.d(t,"default",(function(){return l}));var r=a(3),n=a(7),c=(a(0),a(123)),b={id:"cameraprops.cameraprops-1",title:"Interface: CameraProps",sidebar_label:"CameraProps",custom_edit_url:null,hide_title:!0},i={unversionedId:"api/interfaces/cameraprops.cameraprops-1",id:"api/interfaces/cameraprops.cameraprops-1",isDocsHomePage:!1,title:"Interface: CameraProps",description:"Interface: CameraProps",source:"@site/docs/api/interfaces/cameraprops.cameraprops-1.md",slug:"/api/interfaces/cameraprops.cameraprops-1",permalink:"/react-native-vision-camera/docs/api/interfaces/cameraprops.cameraprops-1",editUrl:null,version:"current",sidebar_label:"CameraProps",sidebar:"visionSidebar",previous:{title:"Interface: ErrorWithCause",permalink:"/react-native-vision-camera/docs/api/interfaces/cameraerror.errorwithcause"},next:{title:"Interface: PhotoFile",permalink:"/react-native-vision-camera/docs/api/interfaces/photofile.photofile-1"}},o=[{value:"Hierarchy",id:"hierarchy",children:[]},{value:"Properties",id:"properties",children:[{value:"colorSpace",id:"colorspace",children:[]},{value:"device",id:"device",children:[]},{value:"enableDepthData",id:"enabledepthdata",children:[]},{value:"enableHighResolutionCapture",id:"enablehighresolutioncapture",children:[]},{value:"enablePortraitEffectsMatteDelivery",id:"enableportraiteffectsmattedelivery",children:[]},{value:"enableZoomGesture",id:"enablezoomgesture",children:[]},{value:"format",id:"format",children:[]},{value:"fps",id:"fps",children:[]},{value:"hdr",id:"hdr",children:[]},{value:"isActive",id:"isactive",children:[]},{value:"lowLightBoost",id:"lowlightboost",children:[]},{value:"onError",id:"onerror",children:[]},{value:"onInitialized",id:"oninitialized",children:[]},{value:"preset",id:"preset",children:[]},{value:"torch",id:"torch",children:[]},{value:"zoom",id:"zoom",children:[]}]}],p={toc:o};function l(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},p,a,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h1",{id:"interface-cameraprops"},"Interface: CameraProps"),Object(c.b)("p",null,Object(c.b)("a",{parentName:"p",href:"/react-native-vision-camera/docs/api/modules/cameraprops"},"CameraProps"),".CameraProps"),Object(c.b)("h2",{id:"hierarchy"},"Hierarchy"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("em",{parentName:"p"},"ViewProps")),Object(c.b)("p",{parentName:"li"},"\u21b3 ",Object(c.b)("strong",{parentName:"p"},"CameraProps")))),Object(c.b)("h2",{id:"properties"},"Properties"),Object(c.b)("h3",{id:"colorspace"},"colorSpace"),Object(c.b)("p",null,"\u2022 ",Object(c.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(c.b)("strong",{parentName:"p"},"colorSpace"),": ",Object(c.b)("a",{parentName:"p",href:"/react-native-vision-camera/docs/api/modules/cameradevice#colorspace"},Object(c.b)("em",{parentName:"a"},"ColorSpace"))),Object(c.b)("p",null,"Specifies the color space to use for this camera device. Make sure the given ",Object(c.b)("inlineCode",{parentName:"p"},"format")," contains the given ",Object(c.b)("inlineCode",{parentName:"p"},"colorSpace"),"."),Object(c.b)("p",null,"Requires ",Object(c.b)("inlineCode",{parentName:"p"},"format")," to be set."),Object(c.b)("p",null,"Defined in: ",Object(c.b)("a",{parentName:"p",href:"https://github.com/cuvent/react-native-vision-camera/blob/15e0c7c/src/CameraProps.ts#L95"},"CameraProps.ts:95")),Object(c.b)("hr",null),Object(c.b)("h3",{id:"device"},"device"),Object(c.b)("p",null,"\u2022 ",Object(c.b)("strong",{parentName:"p"},"device"),": ",Object(c.b)("a",{parentName:"p",href:"/react-native-vision-camera/docs/api/interfaces/cameradevice.cameradevice-1"},Object(c.b)("em",{parentName:"a"},"CameraDevice"))),Object(c.b)("p",null,"The Camera Device to use."),Object(c.b)("p",null,"See the ",Object(c.b)("a",{parentName:"p",href:"https://cuvent.github.io/react-native-vision-camera/docs/guides/devices"},"Camera Devices")," section in the documentation for more information about Camera Devices."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"example"))," "),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-tsx"},"const devices = useCameraDevices('wide-angle-camera')\nconst device = devices.back\n\nreturn (\n  <Camera\n    device={device}\n    isActive={true}\n    style={StyleSheet.absoluteFill}\n  />\n)\n")),Object(c.b)("p",null,"Defined in: ",Object(c.b)("a",{parentName:"p",href:"https://github.com/cuvent/react-native-vision-camera/blob/15e0c7c/src/CameraProps.ts#L26"},"CameraProps.ts:26")),Object(c.b)("hr",null),Object(c.b)("h3",{id:"enabledepthdata"},"enableDepthData"),Object(c.b)("p",null,"\u2022 ",Object(c.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(c.b)("strong",{parentName:"p"},"enableDepthData"),": ",Object(c.b)("em",{parentName:"p"},"boolean")),Object(c.b)("p",null,"Also captures data from depth-perception sensors. (e.g. disparity maps)"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"default"))," false"),Object(c.b)("p",null,"Defined in: ",Object(c.b)("a",{parentName:"p",href:"https://github.com/cuvent/react-native-vision-camera/blob/15e0c7c/src/CameraProps.ts#L103"},"CameraProps.ts:103")),Object(c.b)("hr",null),Object(c.b)("h3",{id:"enablehighresolutioncapture"},"enableHighResolutionCapture"),Object(c.b)("p",null,"\u2022 ",Object(c.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(c.b)("strong",{parentName:"p"},"enableHighResolutionCapture"),": ",Object(c.b)("em",{parentName:"p"},"boolean")),Object(c.b)("p",null,"Indicates whether the photo render pipeline should be configured to deliver high resolution still images"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"default"))," false"),Object(c.b)("p",null,"Defined in: ",Object(c.b)("a",{parentName:"p",href:"https://github.com/cuvent/react-native-vision-camera/blob/15e0c7c/src/CameraProps.ts#L118"},"CameraProps.ts:118")),Object(c.b)("hr",null),Object(c.b)("h3",{id:"enableportraiteffectsmattedelivery"},"enablePortraitEffectsMatteDelivery"),Object(c.b)("p",null,"\u2022 ",Object(c.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(c.b)("strong",{parentName:"p"},"enablePortraitEffectsMatteDelivery"),": ",Object(c.b)("em",{parentName:"p"},"boolean")),Object(c.b)("p",null,"A boolean specifying whether the photo render pipeline is prepared for portrait effects matte delivery."),Object(c.b)("p",null,"When enabling this, you must also set ",Object(c.b)("inlineCode",{parentName:"p"},"enableDepthData")," to ",Object(c.b)("inlineCode",{parentName:"p"},"true"),"."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"platform"))," iOS 12.0+"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"default"))," false"),Object(c.b)("p",null,"Defined in: ",Object(c.b)("a",{parentName:"p",href:"https://github.com/cuvent/react-native-vision-camera/blob/15e0c7c/src/CameraProps.ts#L112"},"CameraProps.ts:112")),Object(c.b)("hr",null),Object(c.b)("h3",{id:"enablezoomgesture"},"enableZoomGesture"),Object(c.b)("p",null,"\u2022 ",Object(c.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(c.b)("strong",{parentName:"p"},"enableZoomGesture"),": ",Object(c.b)("em",{parentName:"p"},"boolean")),Object(c.b)("p",null,"Enables or disables the native pinch to zoom gesture."),Object(c.b)("p",null,"If you want to implement a custom zoom gesture, see ",Object(c.b)("a",{parentName:"p",href:"https://cuvent.github.io/react-native-vision-camera/docs/guides/animated"},"the Zooming with Reanimated documentation"),"."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"default"))," false"),Object(c.b)("p",null,"Defined in: ",Object(c.b)("a",{parentName:"p",href:"https://github.com/cuvent/react-native-vision-camera/blob/15e0c7c/src/CameraProps.ts#L60"},"CameraProps.ts:60")),Object(c.b)("hr",null),Object(c.b)("h3",{id:"format"},"format"),Object(c.b)("p",null,"\u2022 ",Object(c.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(c.b)("strong",{parentName:"p"},"format"),": ",Object(c.b)("a",{parentName:"p",href:"/react-native-vision-camera/docs/api/interfaces/cameradevice.cameradeviceformat"},Object(c.b)("em",{parentName:"a"},"CameraDeviceFormat"))),Object(c.b)("p",null,"Selects a given format. Must be ",Object(c.b)("inlineCode",{parentName:"p"},"undefined")," when ",Object(c.b)("inlineCode",{parentName:"p"},"preset")," is set!"),Object(c.b)("p",null,"Defined in: ",Object(c.b)("a",{parentName:"p",href:"https://github.com/cuvent/react-native-vision-camera/blob/15e0c7c/src/CameraProps.ts#L71"},"CameraProps.ts:71")),Object(c.b)("hr",null),Object(c.b)("h3",{id:"fps"},"fps"),Object(c.b)("p",null,"\u2022 ",Object(c.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(c.b)("strong",{parentName:"p"},"fps"),": ",Object(c.b)("em",{parentName:"p"},"number")),Object(c.b)("p",null,"Specify the frames per second this camera should use. Make sure the given ",Object(c.b)("inlineCode",{parentName:"p"},"format")," includes a frame rate range with the given ",Object(c.b)("inlineCode",{parentName:"p"},"fps"),"."),Object(c.b)("p",null,"Requires ",Object(c.b)("inlineCode",{parentName:"p"},"format")," to be set."),Object(c.b)("p",null,"Defined in: ",Object(c.b)("a",{parentName:"p",href:"https://github.com/cuvent/react-native-vision-camera/blob/15e0c7c/src/CameraProps.ts#L77"},"CameraProps.ts:77")),Object(c.b)("hr",null),Object(c.b)("h3",{id:"hdr"},"hdr"),Object(c.b)("p",null,"\u2022 ",Object(c.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(c.b)("strong",{parentName:"p"},"hdr"),": ",Object(c.b)("em",{parentName:"p"},"boolean")),Object(c.b)("p",null,"Enables or disables HDR on this camera device. Make sure the given ",Object(c.b)("inlineCode",{parentName:"p"},"format")," supports HDR mode."),Object(c.b)("p",null,"Requires ",Object(c.b)("inlineCode",{parentName:"p"},"format")," to be set."),Object(c.b)("p",null,"Defined in: ",Object(c.b)("a",{parentName:"p",href:"https://github.com/cuvent/react-native-vision-camera/blob/15e0c7c/src/CameraProps.ts#L83"},"CameraProps.ts:83")),Object(c.b)("hr",null),Object(c.b)("h3",{id:"isactive"},"isActive"),Object(c.b)("p",null,"\u2022 ",Object(c.b)("strong",{parentName:"p"},"isActive"),": ",Object(c.b)("em",{parentName:"p"},"boolean")),Object(c.b)("p",null,"Whether the Camera should actively stream video frames, or not. See the ",Object(c.b)("a",{parentName:"p",href:"https://cuvent.github.io/react-native-vision-camera/docs/guides/devices#the-isactive-prop"},"documentation about the ",Object(c.b)("inlineCode",{parentName:"a"},"isActive")," prop")," for more information."),Object(c.b)("p",null,"This can be compared to a Video component, where ",Object(c.b)("inlineCode",{parentName:"p"},"isActive")," specifies whether the video is paused or not."),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"Note: If you fully unmount the ",Object(c.b)("inlineCode",{parentName:"p"},"<Camera>")," component instead of using ",Object(c.b)("inlineCode",{parentName:"p"},"isActive={false}"),", the Camera will take a bit longer to start again. In return, it will use less resources since the Camera will be completely destroyed when unmounted.")),Object(c.b)("p",null,"Defined in: ",Object(c.b)("a",{parentName:"p",href:"https://github.com/cuvent/react-native-vision-camera/blob/15e0c7c/src/CameraProps.ts#L34"},"CameraProps.ts:34")),Object(c.b)("hr",null),Object(c.b)("h3",{id:"lowlightboost"},"lowLightBoost"),Object(c.b)("p",null,"\u2022 ",Object(c.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(c.b)("strong",{parentName:"p"},"lowLightBoost"),": ",Object(c.b)("em",{parentName:"p"},"boolean")),Object(c.b)("p",null,"Enables or disables low-light boost on this camera device. Make sure the given ",Object(c.b)("inlineCode",{parentName:"p"},"format")," supports low-light boost."),Object(c.b)("p",null,"Requires ",Object(c.b)("inlineCode",{parentName:"p"},"format")," to be set."),Object(c.b)("p",null,"Defined in: ",Object(c.b)("a",{parentName:"p",href:"https://github.com/cuvent/react-native-vision-camera/blob/15e0c7c/src/CameraProps.ts#L89"},"CameraProps.ts:89")),Object(c.b)("hr",null),Object(c.b)("h3",{id:"onerror"},"onError"),Object(c.b)("p",null,"\u2022 ",Object(c.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(c.b)("strong",{parentName:"p"},"onError"),": (",Object(c.b)("inlineCode",{parentName:"p"},"error"),": ",Object(c.b)("a",{parentName:"p",href:"/react-native-vision-camera/docs/api/classes/cameraerror.cameraruntimeerror"},Object(c.b)("em",{parentName:"a"},"CameraRuntimeError")),") => ",Object(c.b)("em",{parentName:"p"},"void")),Object(c.b)("p",null,"Called when any kind of runtime error occured."),Object(c.b)("h4",{id:"type-declaration"},"Type declaration:"),Object(c.b)("p",null,"\u25b8 (",Object(c.b)("inlineCode",{parentName:"p"},"error"),": ",Object(c.b)("a",{parentName:"p",href:"/react-native-vision-camera/docs/api/classes/cameraerror.cameraruntimeerror"},Object(c.b)("em",{parentName:"a"},"CameraRuntimeError")),"): ",Object(c.b)("em",{parentName:"p"},"void")),Object(c.b)("h4",{id:"parameters"},"Parameters:"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:"left"},"Name"),Object(c.b)("th",{parentName:"tr",align:"left"},"Type"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:"left"},Object(c.b)("inlineCode",{parentName:"td"},"error")),Object(c.b)("td",{parentName:"tr",align:"left"},Object(c.b)("a",{parentName:"td",href:"/react-native-vision-camera/docs/api/classes/cameraerror.cameraruntimeerror"},Object(c.b)("em",{parentName:"a"},"CameraRuntimeError")))))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Returns:")," ",Object(c.b)("em",{parentName:"p"},"void")),Object(c.b)("p",null,"Defined in: ",Object(c.b)("a",{parentName:"p",href:"https://github.com/cuvent/react-native-vision-camera/blob/15e0c7c/src/CameraProps.ts#L124"},"CameraProps.ts:124")),Object(c.b)("p",null,"Defined in: ",Object(c.b)("a",{parentName:"p",href:"https://github.com/cuvent/react-native-vision-camera/blob/15e0c7c/src/CameraProps.ts#L124"},"CameraProps.ts:124")),Object(c.b)("hr",null),Object(c.b)("h3",{id:"oninitialized"},"onInitialized"),Object(c.b)("p",null,"\u2022 ",Object(c.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(c.b)("strong",{parentName:"p"},"onInitialized"),": () => ",Object(c.b)("em",{parentName:"p"},"void")),Object(c.b)("p",null,"Called when the camera was successfully initialized."),Object(c.b)("h4",{id:"type-declaration-1"},"Type declaration:"),Object(c.b)("p",null,"\u25b8 (): ",Object(c.b)("em",{parentName:"p"},"void")),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Returns:")," ",Object(c.b)("em",{parentName:"p"},"void")),Object(c.b)("p",null,"Defined in: ",Object(c.b)("a",{parentName:"p",href:"https://github.com/cuvent/react-native-vision-camera/blob/15e0c7c/src/CameraProps.ts#L128"},"CameraProps.ts:128")),Object(c.b)("p",null,"Defined in: ",Object(c.b)("a",{parentName:"p",href:"https://github.com/cuvent/react-native-vision-camera/blob/15e0c7c/src/CameraProps.ts#L128"},"CameraProps.ts:128")),Object(c.b)("hr",null),Object(c.b)("h3",{id:"preset"},"preset"),Object(c.b)("p",null,"\u2022 ",Object(c.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(c.b)("strong",{parentName:"p"},"preset"),": ",Object(c.b)("a",{parentName:"p",href:"/react-native-vision-camera/docs/api/modules/camerapreset#camerapreset"},Object(c.b)("em",{parentName:"a"},"CameraPreset"))),Object(c.b)("p",null,"Automatically selects a camera format which best matches the given preset. Must be ",Object(c.b)("inlineCode",{parentName:"p"},"undefined")," when ",Object(c.b)("inlineCode",{parentName:"p"},"format")," is set!"),Object(c.b)("p",null,"Defined in: ",Object(c.b)("a",{parentName:"p",href:"https://github.com/cuvent/react-native-vision-camera/blob/15e0c7c/src/CameraProps.ts#L67"},"CameraProps.ts:67")),Object(c.b)("hr",null),Object(c.b)("h3",{id:"torch"},"torch"),Object(c.b)("p",null,"\u2022 ",Object(c.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(c.b)("strong",{parentName:"p"},"torch"),": ",Object(c.b)("em",{parentName:"p"},"off")," ","|"," ",Object(c.b)("em",{parentName:"p"},"on")),Object(c.b)("p",null,"Set the current torch mode."),Object(c.b)("p",null,"Note: The torch is only available on ",Object(c.b)("inlineCode",{parentName:"p"},'"back"')," cameras, and isn't supported by every phone."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"default")),' "off"'),Object(c.b)("p",null,"Defined in: ",Object(c.b)("a",{parentName:"p",href:"https://github.com/cuvent/react-native-vision-camera/blob/15e0c7c/src/CameraProps.ts#L44"},"CameraProps.ts:44")),Object(c.b)("hr",null),Object(c.b)("h3",{id:"zoom"},"zoom"),Object(c.b)("p",null,"\u2022 ",Object(c.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(c.b)("strong",{parentName:"p"},"zoom"),": ",Object(c.b)("em",{parentName:"p"},"number")),Object(c.b)("p",null,"Specifies the zoom factor of the current camera, in percent. (",Object(c.b)("inlineCode",{parentName:"p"},"0.0")," - ",Object(c.b)("inlineCode",{parentName:"p"},"1.0"),")"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Note:")," Linearly increasing this value always appears logarithmic to the user."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"default"))," 0.0"),Object(c.b)("p",null,"Defined in: ",Object(c.b)("a",{parentName:"p",href:"https://github.com/cuvent/react-native-vision-camera/blob/15e0c7c/src/CameraProps.ts#L52"},"CameraProps.ts:52")))}l.isMDXComponent=!0}}]);