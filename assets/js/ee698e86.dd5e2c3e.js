"use strict";(self.webpackChunkvision_camera=self.webpackChunkvision_camera||[]).push([[611],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=u(n),g=i,d=m["".concat(s,".").concat(g)]||m[g]||p[g]||a;return n?r.createElement(d,o(o({ref:t},c),{},{components:n})):r.createElement(d,o({ref:t},c))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=g;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:i,o[1]=l;for(var u=2;u<a;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},5827:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return o},default:function(){return p},frontMatter:function(){return a},metadata:function(){return l},toc:function(){return u}});var r=n(3117),i=(n(7294),n(3905));const a={id:"frame-processor-plugin-list",title:"Community Plugins",sidebar_label:"Community Plugins"},o=void 0,l={unversionedId:"guides/frame-processor-plugin-list",id:"guides/frame-processor-plugin-list",title:"Community Plugins",description:"These are VisionCamera Frame Processor Plugins created by the community.",source:"@site/docs/guides/FRAME_PROCESSOR_PLUGIN_LIST.mdx",sourceDirName:"guides",slug:"/guides/frame-processor-plugin-list",permalink:"/docs/guides/frame-processor-plugin-list",draft:!1,editUrl:"https://github.com/mrousavy/react-native-vision-camera/edit/main/docs/docs/guides/FRAME_PROCESSOR_PLUGIN_LIST.mdx",tags:[],version:"current",frontMatter:{id:"frame-processor-plugin-list",title:"Community Plugins",sidebar_label:"Community Plugins"},sidebar:"visionSidebar",previous:{title:"Finish creating your Frame Processor Plugin",permalink:"/docs/guides/frame-processors-plugins-final"},next:{title:"Zooming",permalink:"/docs/guides/zooming"}},s={},u=[{value:"Installing a Plugin",id:"installing-a-plugin",level:2},{value:"Plugin List",id:"plugin-list",level:2},{value:"\ud83d\ude80 Next section: Zooming",id:"-next-section-zooming",level:4}],c={toc:u},m="wrapper";function p(e){let{components:t,...n}=e;return(0,i.kt)(m,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"These are VisionCamera Frame Processor Plugins created by the community."),(0,i.kt)("h2",{id:"installing-a-plugin"},"Installing a Plugin"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Install using npm:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"npm i vision-camera-xxxxx\n")),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},"Add the native function's name (the one with the ",(0,i.kt)("inlineCode",{parentName:"li"},"__")," prefix) to your ",(0,i.kt)("inlineCode",{parentName:"li"},"babel.config.js"),". (See their README for instructions)")),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"You have to restart metro-bundler for changes in the ",(0,i.kt)("inlineCode",{parentName:"p"},"babel.config.js")," file to take effect.")),(0,i.kt)("h2",{id:"plugin-list"},"Plugin List"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/mrousavy/vision-camera-image-labeler"},"mrousavy/",(0,i.kt)("strong",{parentName:"a"},"vision-camera-image-labeler")),": A plugin to label images using MLKit Vision Image Labeler."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/mrousavy/vision-camera-resize-plugin"},"mrousavy/",(0,i.kt)("strong",{parentName:"a"},"vision-camera-resize-plugin")),": A plugin for fast frame resizing to optimize execution speed of expensive AI algorithms."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/rodgomesc/vision-camera-face-detector"},"rodgomesc/",(0,i.kt)("strong",{parentName:"a"},"vision-camera-face-detector")),": A plugin to detect faces using MLKit Vision Face Detector."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/rodgomesc/vision-camera-qrcode-scanner"},"rodgomesc/",(0,i.kt)("strong",{parentName:"a"},"vision-camera-qrcode-scanner")),": A plugin to read barcodes using MLKit Vision QrCode Scanning"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/mrousavy/Colorwaver"},"mrousavy/",(0,i.kt)("strong",{parentName:"a"},"Colorwaver")),": An app (+ plugin) to detect color palettes in the real world."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/xulihang/vision-camera-dynamsoft-barcode-reader"},"xulihang/",(0,i.kt)("strong",{parentName:"a"},"vision-camera-dynamsoft-barcode-reader")),": A plugin to read barcodes using Dynamsoft Barcode Reader."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/xulihang/vision-camera-dynamsoft-label-recognizer"},"xulihang/",(0,i.kt)("strong",{parentName:"a"},"vision-camera-dynamsoft-label-recognizer")),": A plugin to recognize text on labels, MRZ passports, etc. using Dynamsoft Label Recognizer."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/aarongrider/vision-camera-ocr"},"aarongrider/",(0,i.kt)("strong",{parentName:"a"},"vision-camera-ocr")),": A plugin to detect text in real time using MLKit Text Detector (OCR).")),(0,i.kt)("br",null),(0,i.kt)("br",null),(0,i.kt)("br",null),(0,i.kt)("p",{align:"center"},(0,i.kt)("b",null,(0,i.kt)("a",{href:"https://github.com/mrousavy/react-native-vision-camera/edit/main/docs/docs/guides/FRAME_PROCESSOR_PLUGIN_LIST.mdx"},"Click here")," to add your Frame Processor Plugin to this list!")),(0,i.kt)("br",null),(0,i.kt)("br",null),(0,i.kt)("br",null),(0,i.kt)("h4",{id:"-next-section-zooming"},"\ud83d\ude80 Next section: ",(0,i.kt)("a",{parentName:"h4",href:"/docs/guides/zooming"},"Zooming")))}p.isMDXComponent=!0}}]);