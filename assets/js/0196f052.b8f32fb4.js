"use strict";(self.webpackChunkvision_camera=self.webpackChunkvision_camera||[]).push([[183],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(n),d=o,f=p["".concat(l,".").concat(d)]||p[d]||m[d]||i;return n?r.createElement(f,a(a({ref:t},u),{},{components:n})):r.createElement(f,a({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:o,a[1]=s;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5590:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return a},default:function(){return m},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return c}});var r=n(3117),o=(n(7294),n(3905));const i={id:"frame-processors-plugins-final",title:"Creating Frame Processor Plugins",sidebar_label:"Finish creating your Frame Processor Plugin"},a=void 0,s={unversionedId:"guides/frame-processors-plugins-final",id:"guides/frame-processors-plugins-final",title:"Creating Frame Processor Plugins",description:"Expose your Frame Processor Plugin to JS",source:"@site/docs/guides/FRAME_PROCESSOR_CREATE_FINAL.mdx",sourceDirName:"guides",slug:"/guides/frame-processors-plugins-final",permalink:"/docs/guides/frame-processors-plugins-final",draft:!1,editUrl:"https://github.com/mrousavy/react-native-vision-camera/edit/main/docs/docs/guides/FRAME_PROCESSOR_CREATE_FINAL.mdx",tags:[],version:"current",frontMatter:{id:"frame-processors-plugins-final",title:"Creating Frame Processor Plugins",sidebar_label:"Finish creating your Frame Processor Plugin"},sidebar:"visionSidebar",previous:{title:"Creating Frame Processor Plugins (Android)",permalink:"/docs/guides/frame-processors-plugins-android"},next:{title:"Community Plugins",permalink:"/docs/guides/frame-processor-plugin-list"}},l={},c=[{value:"Expose your Frame Processor Plugin to JS",id:"expose-your-frame-processor-plugin-to-js",level:2},{value:"Test it!",id:"test-it",level:2},{value:"Next Steps",id:"next-steps",level:2},{value:"\ud83d\ude80 Next section: Browse Community Plugins",id:"-next-section-browse-community-plugins",level:4}],u={toc:c},p="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"expose-your-frame-processor-plugin-to-js"},"Expose your Frame Processor Plugin to JS"),(0,o.kt)("p",null,"To make the Frame Processor Plugin available to the Frame Processor Worklet Runtime, create the following wrapper function in JS/TS:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import type { Frame } from 'react-native-vision-camera'\n\n/**\n * Scans QR codes.\n */\nexport function scanQRCodes(frame: Frame): string[] {\n  'worklet'\n  return __scanQRCodes(frame)\n}\n")),(0,o.kt)("p",null,"Users will then have to add the Frame Processor Plugin's name to their  ",(0,o.kt)("inlineCode",{parentName:"p"},"babel.config.js"),"."),(0,o.kt)("p",null,"For the QR Code Scanner, this will be ",(0,o.kt)("inlineCode",{parentName:"p"},"__scanQRCodes"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:"{6}","{6}":!0},"module.exports = {\n  plugins: [\n    [\n      'react-native-reanimated/plugin',\n      {\n        globals: ['__scanQRCodes'],\n      },\n    ],\n")),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"You have to restart metro-bundler for changes in the ",(0,o.kt)("inlineCode",{parentName:"p"},"babel.config.js")," file to take effect.")),(0,o.kt)("h2",{id:"test-it"},"Test it!"),(0,o.kt)("p",null,"Simply call the wrapper Worklet in your Frame Processor:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"{4}","{4}":!0},"function App() {\n  const frameProcessor = useFrameProcessor((frame) => {\n    'worklet'\n    const qrCodes = scanQRCodes(frame)\n    console.log(`QR Codes in Frame: ${qrCodes}`)\n  }, [])\n\n  return (\n    <Camera frameProcessor={frameProcessor} {...cameraProps} />\n  )\n}\n")),(0,o.kt)("h2",{id:"next-steps"},"Next Steps"),(0,o.kt)("p",null,"If you want to distribute your Frame Processor Plugin, simply use npm."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Create a blank Native Module using ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/callstack/react-native-builder-bob"},"bob")," or ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/brodybits/create-react-native-module"},"create-react-native-module")),(0,o.kt)("li",{parentName:"ol"},"Name it ",(0,o.kt)("inlineCode",{parentName:"li"},"vision-camera-plugin-xxxxx")," where ",(0,o.kt)("inlineCode",{parentName:"li"},"xxxxx")," is the name of your plugin"),(0,o.kt)("li",{parentName:"ol"},"Remove the generated template code from the Example Native Module"),(0,o.kt)("li",{parentName:"ol"},"Add VisionCamera to ",(0,o.kt)("inlineCode",{parentName:"li"},"peerDependencies"),": ",(0,o.kt)("inlineCode",{parentName:"li"},'"react-native-vision-camera": ">= 2"')),(0,o.kt)("li",{parentName:"ol"},"Implement the Frame Processor Plugin in the iOS, Android and JS/TS Codebase using the guides above"),(0,o.kt)("li",{parentName:"ol"},"Add installation instructions to the ",(0,o.kt)("inlineCode",{parentName:"li"},"README.md")," to let users know they have to add your frame processor in the ",(0,o.kt)("inlineCode",{parentName:"li"},"babel.config.js")," configuration."),(0,o.kt)("li",{parentName:"ol"},"Publish the plugin to npm. Users will only have to install the plugin using ",(0,o.kt)("inlineCode",{parentName:"li"},"npm i vision-camera-plugin-xxxxx")," and add it to their ",(0,o.kt)("inlineCode",{parentName:"li"},"babel.config.js")," file."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/mrousavy/react-native-vision-camera/edit/main/docs/docs/guides/FRAME_PROCESSOR_PLUGIN_LIST.mdx"},"Add the plugin to the ",(0,o.kt)("strong",{parentName:"a"},"official VisionCamera plugin list"))," for more visibility")),(0,o.kt)("br",null),(0,o.kt)("h4",{id:"-next-section-browse-community-plugins"},"\ud83d\ude80 Next section: ",(0,o.kt)("a",{parentName:"h4",href:"frame-processor-plugin-list"},"Browse Community Plugins")))}m.isMDXComponent=!0}}]);